local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "DIABLO'S CIRCUS BY DTRLEVEN" .. Fluent.Version,
    SubTitle = "by DTRLEVEN",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "ITEM", Icon = "" }),
    Players = Window:AddTab({ Title = "Players", Icon = "settings" })
}

local Options = Fluent.Options

do
    Fluent:Notify({
        Title = "Thanks for Using My Script",
        Content = "By DTRLEVEN",
        SubContent = "", -- Optional
        Duration = 5 -- Set to nil to make the notification not disappear
    })



    Tabs.Main:AddParagraph({
        Title = "ITEM TELEPORT",
        Content = "TELEPORTING YOU TO THE ITEM"
    })



    Tabs.Main:AddButton({
        Title = "RED KEY TELEPORT",
        Description = "Very important button",
        Callback = function()
            local rootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
            rootPart.CFrame = CFrame.new (57.0907135, 27.7465172, 148.08429, -0.091786623, -0.004226177, 0.995769799, -0.0271836407, -0.999607801, -0.00674815848, 0.995407641, -0.0276880376, 0.091635704)  
    })

    Tabs.Main:AddButton({
        Title = "OUTSIDE KEY TELEPORT",
        Description = "Very important button",
        Callback = function()
            local rootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
  rootPart.CFrame = CFrame.new (75.0288239, 3.66163635, 68.491066, 0.707134247, -0, -0.707079291, 0, 1, -0, 0.707079291, 0, 0.707134247)
    })

    Tabs.Main:AddButton({
        Title = "FINAL KEY TELEPORT",
        Description = "Very important button",
        Callback = function()
            local rootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
            rootPart.CFrame = CFrame.new (26.2308636, 19.2193184, 129.889069, -0.906296611, 0, 0.422642082, 0, 1, 0, -0.422642082, 0, -0.906296611)
    })

    Tabs.Main:AddButton({
        Title = "Key Card",
        Description = "Very important button",
        Callback = function()
            local rootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
  rootPart.CFrame = CFrame.new (60.2157631, 2.26956582, 111.784912, -0.999996781, 0.00267699431, -4.4987748e-05, 0.00266852952, 0.995188355, -0.0979439169, -0.000217424007, -0.0979436785, -0.995192289)
    })

    Tabs.Main:AddButton({
        Title = "Shovel",
        Description = "Very important button",
        Callback = function()
            local rootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
  rootPart.CFrame = CFrame.new (61.5556259, 19.9651489, 134.705185, -0.998827219, -0.0405891351, 0.0263951533, -0.0463712551, 0.95875591, -0.280422568, -0.0139244013, -0.281317651, -0.959513664)
    })

    Tabs.Main:AddButton({
        Title = "Jack Hammer",
        Description = "Very important button",
        Callback = function()
            local rootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
  rootPart.CFrame = CFrame.new (72.4893875, 5.96884108, 147.592102, -0.563159108, -0.826173961, -0.0169869959, -0.00587171316, 0.0245568752, -0.999681234, 0.826327682, -0.562879801, -0.0186805725)
    })

    Tabs.Main:AddButton({
        Title = "Crow Bar Teleport",
        Description = "Very important button",
        Callback = function()
            local rootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
  rootPart.CFrame = CFrame.new (103.849243, 8.68763256, 141.177933, -0.906955123, -0.421208382, -0.00398352742, 0.00400318205, 0.000837564468, -0.999991596, 0.421208173, -0.906963527, 0.000926613808)
    })

    Tabs.Main:AddButton({
        Title = "Hammer Teleport",
        Description = "Very important button",
        Callback = function()
            local rootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
  rootPart.CFrame = CFrame.new (29.611475, 5.81233406, 124.921661, -0.919910073, 0.391298443, 0.0255149808, -0.030427536, -0.00635817926, -0.999516726, -0.390947104, -0.920241892, 0.0177552011)
    })
    
    Tabs.Main:AddButton({
        Title = "Gun Teleport",
        Description = "Very important button",
        Callback = function()
            local rootPart = game.Players.LocalPlayer.Character.HumanoidRootlPart
  rootPart.CFrame = CFrame.new (39.7522964, 2.0982914, -6.69485044, 0.000132456757, -0.185619369, 0.982621729, -1, -0.00019461583, 9.80359837e-05, 0.000173036358, -0.982621729, -0.185619399)
    })




    local Toggle = Tabs.Players:AddToggle("ESP", {Title = "ESP", Default = false })

    Toggle:OnChanged(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/DTRHUB/espcircus/refs/heads/main/ESPBYDTRLEVEN"))()
        print("Toggle changed:", Options.MyToggle.Value)
    end)
    Options.MyToggle:SetValue(false)




    local Keybind = Tabs.Players:AddKeybind("Keybind", {
        Title = "NOCLIP",
        Mode = "Always", -- Always, Toggle, Hold
        Default = "N", -- String as the name of the keybind (MB1, MB2 for mouse buttons)

        -- Occurs when the keybind is clicked, Value is `true`/`false`
        Callback = function(Value)
            game.RunService.Stepped:Connect(function() 
                game.Players.LocalPlayer.Character.Head.CanCollide = false
                game.Players.LocalPlayer.Character.Torso.CanCollide = false 
                end)
            print("Keybind clicked!", Value)
        end,

        -- Occurs when the keybind itself is changed, `New` is a KeyCode Enum OR a UserInputType Enum
        ChangedCallback = function(New)
            
            print("Keybind changed!", New)
        end
    })




    local Keybind = Tabs.Players:AddKeybind("Keybind", {
        Title = "Fly",
        Mode = "Toggle", -- Always, Toggle, Hold
        Default = "G", -- String as the name of the keybind (MB1, MB2 for mouse buttons)

        -- Occurs when the keybind is clicked, Value is `true`/`false`
        Callback = function(Value)

     loadstring(game:HttpGet("https://raw.githubusercontent.com/RadeonScripts/Universal/refs/heads/main/FlyScript"))()
          
            print("Keybind clicked!", Value)
        end,


        local Keybind = Tabs.Players:AddKeybind("Keybind", {
            Title = "Fly",
            Mode = "Toggle", -- Always, Toggle, Hold
            Default = "G", -- String as the name of the keybind (MB1, MB2 for mouse buttons)
    
            -- Occurs when the keybind is clicked, Value is `true`/`false`
            Callback = function(Value)
    
                loadstring(game:HttpGet("https://raw.githubusercontent.com/DTRHUB/killallforcircus/refs/heads/main/hitboxexpander"))()
              
                print("Keybind clicked!", Value)
            end,

        -- Occurs when the keybind itself is changed, `New` is a KeyCode Enum OR a UserInputType Enum
        ChangedCallback = function(New)
            print("Keybind changed!", New)
        end
    })

    -- OnClick is only fired when you press the keybind and the mode is Toggle
    -- Otherwise, you will have to use Keybind:GetState()
    Keybind:OnClick(function()
        print("Keybind clicked:", Keybind:GetState())
    end)

    Keybind:OnChanged(function()
        print("Keybind changed:", Keybind.Value)
    end)

    task.spawn(function()
        while true do
            wait(1)

            -- example for checking if a keybind is being pressed
            local state = Keybind:GetState()
            if state then
                print("Keybind is being held down")
            end

            if Fluent.Unloaded then break end
        end
    end)

    Keybind:SetValue("MB2", "Toggle") -- Sets keybind to MB2, mode to Hold




-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "DIABLO'S CIRCUS BY DTRLEVEN",
    Content = "The script has been loaded.",
    Duration = 6
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
